akka {
  coordinated-shutdown {
    exit-jvm = on
  }
  actor {
    provider = "cluster"
  }
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    min-nr-of-members = 3

    frontend {
      min-nr-of-members = 1
    }

    backend {
      min-nr-of-members = 2
    }

    log-info = on
    log-info-verbose = on
    // When a new node is started it sends a message to all seed nodes and then sends a join command to the one that answers first. If none of the seed nodes replies (might not be started yet) it retries this procedure until success or shutdown.
    // the node configured as the first element in the seed-nodes list must be started when initially starting a cluster. If it is not, the other seed-nodes will not become initialized, and no other node can join the cluster. The reason for the special first seed node is to avoid forming separated islands when starting from an empty cluster
    seed-nodes = [
      "akka://ClusterSystem@127.0.0.1:2551",
      "akka://ClusterSystem@127.0.0.1:2552"]

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"

    shutdown-after-unsuccessful-join-seed-nodes = 20s

  }
}